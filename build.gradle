plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'screw.microsoft'
version = '1'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}
configurations {
    all {
        exclude group: 'net.kyori'
    }
}
dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT'
    implementation('com.github.retrooper.packetevents:spigot:2.0-SNAPSHOT')
}

tasks {
    build {
        dependsOn(shadowJar)
    }
    shadowJar {
        relocate("io.github.retrooper.packetevents", "screw.microsoft.antipopup.libs.io.github.retrooper.packetevents")
        relocate("com.github.retrooper.packetevents", "screw.microsoft.antipopup.libs.com.github.retrooper.packetevents")
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
